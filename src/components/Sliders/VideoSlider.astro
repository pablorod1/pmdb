---
import { getMoviesWithVideos } from "../../lib/tmdb"
import PlayIcon from "../../icons/PlayIcon.astro";
import DotsCircleIcon from "../../icons/DotsCircleIcon.astro";

const nowPlayingMovies = await getMoviesWithVideos();
nowPlayingMovies.sort((a: any, b: any) => b.popularity - a.popularity);

const {title} = Astro.props;
---

<div id="teasers-container" class="flex flex-col lg:px-24 w-full py-12 h-full bg-no-repeat bg-cover bg-center">
  <h1 class="text-white font-bold text-3xl">{title}</h1>
  <div class="teasers-glide relative py-12">
    <div class="glide__track mx-12 !overflow-visible" data-glide-el="track">
      <ul class="glide__slides !overflow-visible">
        {
          nowPlayingMovies.map((movie: any, index: number) => (
            <li id={`movie-${index}`} data-id={index} slot="slides" class="glide__slide overflow-visible">
              <div class="flex flex-col justify-center items-center gap-y-4">
                <div class="teaser-container relative flex justify-center items-center rounded-xl ">
                  <img class="w-full brightness-75 rounded-xl" src={`https://image.tmdb.org/t/p/original${movie.backdrop_path}`} loading="lazy" />
                  <PlayIcon class="play-icon size-14 absolute cursor-pointer"/>
                  <DotsCircleIcon class="size-6 absolute top-2 right-4 hover:stroke-black hover:fill-white cursor-pointer"/>
                </div>
                <div class="flex flex-col justify-center items-center">
                  <h2 class="text-white text-sm">{movie.title}</h2>
                  <p class="text-gray-300 text-sm text-center">{movie.videos[0].name}</p>
                </div>
              </div>
            </li>
          ))
        }
      </ul>
    </div>
  </div>
</div>

<script>
  import { getMoviesWithVideos } from '../../lib/tmdb';
	
	const nowPlayingMovies = await getMoviesWithVideos();
	nowPlayingMovies.sort((a: any, b: any) => b.popularity - a.popularity);

	const teasersContainer = document.getElementById('teasers-container');
	const teasers = teasersContainer?.querySelectorAll('[id^="movie-"]');

	const teaserPlayerDialog = document.getElementById('video-modal');
	const playIcons = teasersContainer?.querySelectorAll('.play-icon');
	const closeTeaserPlayerDialog = document.getElementById('close-modal');


	(teasersContainer as HTMLDivElement).style.backgroundImage = `url(https://image.tmdb.org/t/p/original${nowPlayingMovies[0].backdrop_path})`;

  

	teasers?.forEach((teaser) => {
		teaser?.addEventListener('mouseover', () => {
			let teaserId = teaser.getAttribute('data-id');
			// Check if teaserId === nowPlayingMovies[teaserId]
			if (teaserId){
				let movieIndex = parseInt(teaserId);
				(teasersContainer as HTMLDivElement).style.backgroundImage = `url(https://image.tmdb.org/t/p/original${nowPlayingMovies[movieIndex].backdrop_path})`;
			}
		});
		const playIcon = teaser.querySelector('.play-icon');
		playIcon?.addEventListener('click', () => {
			let teaserId = teaser.getAttribute('data-id');
			if (teaserId){
				let movieIndex = parseInt(teaserId);
				teaserPlayerDialog?.querySelector('iframe')?.setAttribute('src', `https://www.youtube.com/embed/${nowPlayingMovies[movieIndex].videos[0].key}`);
				teaserPlayerDialog?.classList.remove('hidden');
				teaserPlayerDialog?.classList.add('flex', 'justify-center', 'items-center');
			}
		});
	});

	playIcons?.forEach((playIcon) => {
		playIcon.addEventListener('click', () => {
			let teaserId = playIcon.closest('li')?.getAttribute('data-id');
			if (teaserId){
				let movieIndex = parseInt(teaserId);
				let movieTrailer = teaserPlayerDialog?.querySelector('.movie-trailer');
				if (movieTrailer) {
				  movieTrailer.textContent = nowPlayingMovies[movieIndex].title;
				}
				teaserPlayerDialog?.querySelector('iframe')?.setAttribute('src', `https://www.youtube.com/embed/${nowPlayingMovies[movieIndex].videos[0].key}`);
				teaserPlayerDialog?.classList.remove('hidden');
				teaserPlayerDialog?.classList.add('flex', 'justify-center', 'items-center', 'flex-col');
			}
		});
	});

	closeTeaserPlayerDialog?.addEventListener('click', () => {
		teaserPlayerDialog?.classList.add('hidden');
		teaserPlayerDialog?.classList.remove('flex', 'justify-center', 'items-center', 'flex-col');
		teaserPlayerDialog?.querySelector('iframe')?.setAttribute('src', '');
	});
</script>