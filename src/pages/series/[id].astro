---
import GenrePill from "@components/UI/GenrePill.astro";
import Layout from "@layouts/Layout.astro";
import SimilarSeriesGlide from "@components/Sliders/SimilarSeriesGlide";
import { formatDate, formatVoteAverage, formatVotes } from "src/common";
import { ProgressSpinner } from "@components/UI/ProgressSpinner";
import { getSerieById, type SerieDetails } from "@lib/api/series";
import type { Crew, Cast } from "@lib/api/media";

import VideoModalComponent from "@components/UI/VideoModal";
import CreditsCastSection from "@components/CreditsCastSection.astro";

const url = new URL(Astro.request.url);
const id = Number(url.pathname.split("/")[2]);
const serie: SerieDetails = await getSerieById(id);
---

<Layout title={serie.name}>
  <main class="relative">
    <div
      class="container-fluid px-4 py-20 flex justify-center items-center bg-cover bg-no-repeat"
      style={`background-image: url(https://image.tmdb.org/t/p/original${serie.backdrop_path})`}
    >
      <div
        class="movie-info flex flex-col gap-12 items-stretch xl:max-w-[1200px] overflow-hidden"
      >
        <div class="flex flex-col sm:flex-row items-start gap-12">
          <img
            class="aspect-auto w-2/6 h-auto rounded-xl object-cover"
            src={`https://image.tmdb.org/t/p/original${serie.poster_path}`}
            alt={serie.name}
          />
          <div class="flex flex-col justify-start items-start gap-6">
            <div class="flex flex-col items-start">
              <h1
                id="movie-title"
                class="flex items-center gap-2 text-xl md:text-3xl xl:text-5xl font-bold text-white leading-tight"
              >
                {serie.name}
                <p
                  class="pt-1 font-medium text-gray-400 text-lg md:text-2xl xl:text-4xl"
                >
                  ({new Date(serie.first_air_date).getFullYear()})
                </p>
              </h1>
              <div class="flex items-center gap-2 text-lg mt-4">
                <span class="text-gray-300"
                  >{
                    serie.seasons.filter((season) =>
                      season.name.includes("Temporada")
                    ).length
                  } Temporadas</span
                >
                <span class="text-gray-300"> | </span>
                <span class="text-gray-300"
                  >{formatDate(serie.seasons[0].air_date)}</span
                >
              </div>
              <div class="flex flex-wrap items-center gap-1 gap-y-4 mt-4">
                {
                  serie.genres.map((genre: any) => (
                    <GenrePill className="text-sm px-4" genre={genre.name} />
                  ))
                }
              </div>
              <p class="text-gray-400 mt-4 text-pretty italic">
                {serie.tagline}
              </p>
            </div>
            <div class="flex items-center gap-4 w-full">
              <ProgressSpinner
                client:only="react"
                percentage={formatVoteAverage(serie.vote_average)}
                size={80}
              />
              <div class="flex flex-col items-start">
                <span class="text-white text-lg md:text-xl font-bold"
                  >Puntuaci√≥n de los usuarios</span
                >
                <span class="text-gray-400"
                  >Votos totales: {formatVotes(serie.vote_count)}</span
                >
              </div>
            </div>
            <div class="flex flex-wrap items-end gap-8">
              {
                serie.providers && serie.providers.length > 0 && (
                  <div class="flex flex-col gap-y-2">
                    <h2 class="text-white font-semibold text-lg text-nowrap">
                      Disponible en
                    </h2>
                    <div class="flex items-center gap-6">
                      {serie.providers
                        .sort((a, b) => b.display_priority - a.display_priority)
                        .map((item: any) => (
                          <img
                            class="w-14 rounded-xl"
                            src={`https://image.tmdb.org/t/p/original${item.logo_path}`}
                            alt={item.provider_name}
                          />
                        ))}
                    </div>
                  </div>
                )
              }
              {
                serie.videos && serie.videos.length > 0 && (
                  <VideoModalComponent videoId={serie.videos[0].key} />
                )
              }
            </div>
          </div>
        </div>
        <div class="flex flex-col gap-12">
          <div>
            <h2 class="text-white font-semibold text-2xl">Vista General</h2>
            <p class="text-gray-300 mt-4">{serie.overview}</p>
          </div>
          <div class="grid grid-cols-3 gap-12">
            {
              serie.credits.crew
                .sort((a: Crew, b: Crew) => b.popularity - a.popularity)
                .slice(0, 5)
                .map((item: any) => (
                  <div class="flex flex-col justify-start items-start">
                    <h3 class="text-white font-semibold">{item.name}</h3>
                    <p class="text-gray-200 font-thin">{item.job}</p>
                  </div>
                ))
            }
          </div>
        </div>
      </div>
    </div>
    <CreditsCastSection item={serie} />
    {
      serie.providers && serie.providers.length > 0 && (
        <SimilarSeriesGlide
          client:only="react"
          id={serie.providers[0].provider_id}
        />
      )
    }
  </main>
</Layout>

<style>
  .container-fluid {
    position: relative;
  }

  .container-fluid::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.9); /* Capa negra con opacidad */
    z-index: 0;
  }
  .movie-info {
    z-index: 1;
  }
</style>
